plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
	id "de.undercouch.download" version "4.1.2"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

version = project.mod_version
group = project.maven_group

version = project.mod_version + "+" + project.minecraft_version

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

if(!project.file("lib/mtr-fabric.jar").exists()) {
	download {
		src "https://www.minecrafttransitrailway.com/libs/${project.mtr_version}/MTR-fabric-${minecraft_version}-${project.mtr_version}.jar"
		dest "lib/mtr-fabric.jar"
		overwrite true
	}
}

task setupLibrary() {
	doLast {
		delete("lib/mtr-fabric.jar")
		download {
			src "https://www.minecrafttransitrailway.com/libs/${project.mtr_version}/MTR-fabric-${minecraft_version}-${project.mtr_version}.jar"
			dest "lib/mtr-fabric.jar"
			overwrite true
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation files("lib/mtr-fabric.jar")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand (
			"version": project.version,
			"mc_version": ">=${project.minecraft_version}"
		)
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	// Minecraft 1.19 upwards uses Java 17.
	def targetVersion = 17
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}